#Constructor Overload
package the_Seven;

public class Product {
	String name;
	String location;
	int weight;

	public Product(String name) {
		this(name, 1, "shelf");
	}
	
	public Product(String name, String location) {
		this(name, 1, location);
	}
	
	public Product(String name, int weight) {
		this.name=name;
		this.weight=1;
		this.location="shelf";
		
	}
	
	public Product(String name, int weight, String location) {
		this.name=name;
		this.weight=weight;
		this.location=location;
	}
	
	public String toString() {
		return this.name + "(" + this.weight + "kg)" + "can be found from the " + this.location;
	}

	public static void main(String[] args) {
		Product tapeMeasure = new Product("Tape measure");
		Product plaster = new Product("Plaster", "home improvement section");
		Product tyre = new Product("Tyre", 5);

		System.out.println(tapeMeasure);
		System.out.println(plaster);
		System.out.println(tyre);

	}

}

#Method overload
package the_Seven;

public class Counter {
	int value;

	public Counter(int startValue) {
		this.value=startValue;
	}
	
	public Counter() {
		this.value=0;
	}
	
	public int value() {
		return this.value;
	}
	
	public void decrease() {
		this.value-=1;
	}
	
	public void increase() {
		this.value+=1;
	}
	
	public void increase(int increaseBy) {
		if(increaseBy<0) {
			this.value=this.value;
		}
		this.value+=increaseBy;
	}
	
	public void decrease(int decreaseBy) {
		if(decreaseBy<0) {
			this.value=this.value;
		}
		this.value-=decreaseBy;
	}
	
	public int getValue() {
		return this.value;
	}

	public static void main(String[] args) {
		Counter counter = new Counter(10);
		counter.increase();
		counter.decrease();
		counter.increase(5);
		counter.decrease(2);
		
		System.out.println(counter.getValue());

	}

}

